<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- review_mapper.xml -->
<mapper namespace="com.bit.motrip.dao.review.ReviewDao">

    <resultMap id="reviewResultMap" type="com.bit.motrip.domain.Review">
        <id property="reviewNo"             column="review_no"          jdbcType="INTEGER" />
        <result property="tripPlanNo"       column="trip_plan_no"       jdbcType="INTEGER" />
        <result property="reviewAuthor"     column="review_author"      jdbcType="VARCHAR" />
        <result property="reviewTitle"      column="review_title"       jdbcType="VARCHAR" />
        <result property="reviewContents"   column="review_contents"    jdbcType="VARCHAR" />
        <result property="reviewThumbnail"  column="review_thumbnail"   jdbcType="VARCHAR" />
        <result property="instaPostLink"    column="insta_post_link"    jdbcType="VARCHAR" />
        <result property="isReviewPublic"   column="is_review_public"   jdbcType="BOOLEAN" />
        <result property="reviewLikes"      column="review_likes"       jdbcType="INTEGER" />
        <result property="viewCount"        column="view_count"         jdbcType="INTEGER" />
        <result property="reviewRegDate"    column="review_reg_date"    jdbcType="DATE" />
        <result property="isReviewDeleted"  column="is_review_deleted"  jdbcType="BOOLEAN" />
        <result property="reviewDelDate"    column="review_del_date"    jdbcType="DATE" />

    </resultMap>

    <resultMap id="tripPlanResultMap" type="com.bit.motrip.domain.TripPlan">
        <id column="trip_plan_no" property="tripPlanNo" jdbcType="INTEGER"/>
        <result column="trip_plan_author" property="tripPlanAuthor" jdbcType="VARCHAR"/>
        <result column="trip_plan_title" property="tripPlanTitle" jdbcType="VARCHAR"/>
        <result column="trip_plan_thumbnail" property="tripPlanThumbnail" jdbcType="VARCHAR"/>
        <result column="trip_days" property="tripDays" jdbcType="INTEGER"/>
        <result column="trip_plan_reg_date" property="tripPlanRegDate" jdbcType="DATE"/>
        <result column="trip_plan_del_date" property="tripPlanDelDate" jdbcType="DATE"/>
        <result column="is_plan_deleted" property="isPlanDeleted" jdbcType="TINYINT"/>
        <result column="is_plan_public" property="isPlanPublic" jdbcType="TINYINT"/>
        <result column="is_plan_downloadable" property="isPlanDownloadable" jdbcType="TINYINT"/>
        <result column="is_trip_completed" property="isTripCompleted" jdbcType="TINYINT"/>
        <result column="trip_plan_likes" property="tripPlanLikes" jdbcType="INTEGER"/>
        <result column="trip_plan_views" property="tripPlanViews" jdbcType="INTEGER"/>

        <collection property="dailyplanResultMap" ofType="com.bit.motrip.domain.DailyPlan">
            <id column="daily_plan_no" property="dailyPlanNo" jdbcType="INTEGER"/>
            <result column="trip_plan_no" property="tripPlanNo" jdbcType="INTEGER"/>
            <result column="daily_plan_contents" property="dailyPlanContents" jdbcType="VARCHAR"/>
            <result column="total_trip_time" property="totalTripTime" jdbcType="VARCHAR"/>

            <collection property="placeResultMap" ofType="com.bit.motrip.domain.Place">
                <id column="place_no" property="placeNo" jdbcType="INTEGER"/>
                <result column="daily_plan_no" property="dailyPlanNo" jdbcType="INTEGER"/>
                <result column="place_tags" property="placeTags" jdbcType="VARCHAR"/>
                <result column="place_coordinates" property="placeCoordinates" jdbcType="VARCHAR"/>
                <result column="place_image" property="placeImage" jdbcType="VARCHAR"/>
                <result column="place_phone_number" property="placePhoneNumber" jdbcType="VARCHAR"/>
                <result column="place_address" property="placeAddress" jdbcType="VARCHAR"/>
                <result column="place_category" property="placeCategory" jdbcType="INTEGER"/>
                <result column="trip_time" property="tripTime" jdbcType="VARCHAR"/>
            </collection>
        </collection>
    </resultMap>

    <resultMap id="chatMemberResultMap" type="com.bit.motrip.domain.ChatMember">
        <id column="member_no" property="memberNo" jdbcType="INTEGER"/>
        <result column="chat_room_no" property="chatRoomNo" jdbcType="INTEGER"/>
        <result column="user_id" property="userId" jdbcType="VARCHAR" />
        <result column="trip_plan_no" property="tripPlanNo" jdbcType="INTEGER"/>
        <result column="is_chat_room_author" property="isChatRoomAuthor" jdbcType="TINYINT"/>
    </resultMap>

    <resultMap id="userSelectMap" type="com.bit.motrip.domain.User">
        <result property="userId"                   column="user_id"                    jdbcType="VARCHAR"/>
        <result property="nickname"                 column="nickname"                   jdbcType="VARCHAR"/>
        <result property="pwd"                      column="pwd"                        jdbcType="VARCHAR"/>
        <result property="userName"                 column="user_name"                  jdbcType="VARCHAR"/>
        <result property="phone"                    column="phone"                      jdbcType="VARCHAR"/>
        <result property="addr"                     column="addr"                       jdbcType="VARCHAR"/>
        <result property="addrDetail"               column="addr_detail"                jdbcType="VARCHAR"/>
        <result property="email"                    column="email"                      jdbcType="VARCHAR"/>
        <result property="ssn"                      column="ssn"                        jdbcType="VARCHAR"/>
        <result property="pwd"                      column="pwd"                        jdbcType="VARCHAR"/>
        <result property="selfIntro"                column="self_intro"                 jdbcType="VARCHAR"/>
        <result property="userPhoto"                column="user_photo"                 jdbcType="VARCHAR"/>
        <result property="gender"                   column="gender"                     jdbcType="VARCHAR"/>
        <result property="age"                      column="age"                        jdbcType="VARCHAR"/>
        <result property="role"                     column="role"                       jdbcType="TINYINT"/>
        <result property="userRegDate"              column="user_reg_date"              jdbcType="DATE"/>
        <result property="isSecession"              column="is_secession"               jdbcType="TINYINT"/>
        <result property="secessionDate"            column="secession_date"             jdbcType="TIMESTAMP"/>
        <result property="isSuspension"             column="is_suspension"              jdbcType="TINYINT"/>
        <result property="suspensionDate"           column="suspension_date"            jdbcType="TIMESTAMP"/>
        <result property="warningCount"             column="warning_Count"              jdbcType="TINYINT"/>
        <result property="isSelfIntroPublic"        column="is_self_intro_public"       jdbcType="TINYINT"/>
        <result property="isUserPhotoPublic"        column="is_user_photo_public"       jdbcType="TINYINT"/>
        <result property="isUsingMemoBar"           column="is_using_memo_bar"          jdbcType="TINYINT"/>
        <result property="isListingAttachedMemo"    column="is_listing_attached_memo"   jdbcType="TINYINT"/>
        <result property="isListingSharedMemo"      column="is_listing_Shared_memo"     jdbcType="TINYINT"/>
        <result property="evaluateCount"            column="evaluate_count"             jdbcType="INTEGER"/>
    </resultMap>


    <select id="getCompletedTripPlanList"  parameterType="Map" resultMap="tripPlanResultMap">
        SELECT *
        FROM trip_plan tp
                 JOIN chat_room_members cm ON tp.trip_plan_no = cm.trip_plan_no
        WHERE tp.is_trip_completed = true
          AND (
                (tp.is_plan_public = true AND tp.is_plan_deleted = false AND tp.trip_plan_author = #{tripPlanAuthor})

            )
            LIMIT 0, 10;
    </select>
    <select id="selectTripPlanList" parameterType="Map" resultMap="tripPlanResultMap">
        SELECT tp.trip_plan_no, tp.trip_plan_author, tp.trip_plan_title, tp.trip_plan_thumbnail, tp.trip_days, tp.trip_plan_reg_date,
        tp.trip_plan_del_date, tp.is_plan_deleted, tp.is_plan_public, tp.is_plan_downloadable, tp.is_trip_completed,
        tp.trip_plan_likes, tp.trip_plan_views,
        GROUP_CONCAT(DISTINCT dp.daily_plan_no) AS daily_plan_nos, GROUP_CONCAT(DISTINCT dp.daily_plan_contents) AS daily_plan_contents,
        GROUP_CONCAT(DISTINCT dp.total_trip_time) AS total_trip_times,
        GROUP_CONCAT(DISTINCT p.place_no) AS place_nos, GROUP_CONCAT(DISTINCT p.place_tags) AS place_tags,
        GROUP_CONCAT(DISTINCT p.place_coordinates) AS place_coordinates, GROUP_CONCAT(DISTINCT p.place_image) AS place_images,
        GROUP_CONCAT(DISTINCT p.place_phone_number) AS place_phone_numbers, GROUP_CONCAT(DISTINCT p.place_address) AS place_addresses,
        GROUP_CONCAT(DISTINCT p.place_category) AS place_categories, GROUP_CONCAT(DISTINCT p.trip_time) AS trip_times
        FROM trip_plan tp
        LEFT JOIN daily_plan dp ON tp.trip_plan_no = dp.trip_plan_no
        LEFT JOIN place p ON dp.daily_plan_no = p.daily_plan_no
        WHERE
        <choose>
            <when test="'' != tripPlanAuthor">
                tp.trip_plan_author = #{tripPlanAuthor}
            </when>
            <otherwise>
                tp.is_plan_public = TRUE AND tp.is_plan_deleted = FALSE
            </otherwise>
        </choose>
        GROUP BY tp.trip_plan_no
        ORDER BY
        <choose>
            <when test="'trip_plan_views' == search.searchCondition">
                tp.trip_plan_views DESC, tp.trip_plan_no DESC
            </when>
            <when test="'trip_plan_likes' == search.searchCondition">
                tp.trip_plan_likes DESC, tp.trip_plan_no DESC
            </when>
            <otherwise>
                tp.trip_plan_no DESC
            </otherwise>
        </choose>
        LIMIT #{search.offset}, #{search.limit};
    </select>

    <!-- INSERT C -->
    <insert id="addReview" parameterType="com.bit.motrip.domain.Review">
        insert into review (
        trip_plan_no,
        review_author,
        review_title,
        review_contents,
        review_thumbnail,
        is_review_public,
        review_likes,
        view_count,
        review_reg_date,
        is_review_deleted,
        review_del_date

        ) values (
        #{tripPlanNo},
        #{reviewAuthor},
        #{reviewTitle},
        #{reviewContents},
        #{reviewThumbnail},
        #{isReviewPublic},
        #{reviewLikes},
        #{viewCount},
        CURRENT_TIMESTAMP,
        #{isReviewDeleted},
        #{reviewDelDate}
        )
    </insert>

    <select id="selectReviewList" parameterType="Map" resultMap="reviewResultMap">
        SELECT *
        FROM (
        SELECT r.review_no, r.trip_plan_no, r.review_author, r.review_title, r.review_contents, r.review_thumbnail, r.insta_post_link,
        r.is_review_public, r.review_likes, r.view_count, r.review_reg_date, r.is_review_deleted,
        r.review_del_date,
        ROW_NUMBER() OVER (ORDER BY r.review_reg_date DESC, r.review_no DESC) AS row_num
        FROM review r
        WHERE  1=1
        <choose>
            <when test="condition == 'myReviewList'">
              AND  r.review_author =  #{user.userId}
            </when>
            <when test="condition == 'publicReviewList'">
              AND r.is_review_deleted = FALSE
            </when>
        </choose>
        GROUP BY r.review_no
        ) AS sub
        WHERE row_num BETWEEN #{search.startRowNum} AND #{search.endRowNum}
        ORDER BY
        <choose>
            <when test="'view_count' == search.reviewCondition">
                view_count DESC, review_no DESC
            </when>
            <when test="'review_likes' == search.reviewCondition">
                review_likes DESC, review_no DESC
            </when>
            <otherwise>
                review_reg_date DESC, review_no DESC
            </otherwise>
        </choose>
    </select>


    <select id="getReviewCount" resultType="int">
        SELECT COUNT(*) FROM review
        WHERE is_review_public = TRUE AND is_review_deleted = FALSE
    </select>
    <!-- Select All My ReviewList -->

    <!-- Select One Review -->
    <select id="getReview" parameterType="int" resultMap="reviewResultMap">
        SELECT r.review_no, r.trip_plan_no, r.review_author, r.review_title,
               r.review_contents, r.review_thumbnail,
               r.is_review_public, r.review_likes, r.view_count,
               r.review_reg_date, r.is_review_deleted, r.review_del_date
        FROM review r
        WHERE r.review_no = #{reviewNo}
            LIMIT 1;
    </select>
    <!-- Select One Review -->

    <!-- Update Review -->
    <update id="updateReview" parameterType="com.bit.motrip.domain.Review">
        UPDATE review
        SET review_title = #{reviewTitle},
            review_contents = #{reviewContents},
            review_thumbnail = #{reviewThumbnail},
            insta_post_link = #{instaPostLink},
            is_review_public = #{isReviewPublic}
        WHERE review_no = #{reviewNo}
    </update>

    <!-- Update Review -->

    <!-- Delete Review -->
    <update id="deleteReview">
        UPDATE review
        SET is_review_deleted = true,
            review_del_date = CURRENT_TIMESTAMP + INTERVAL 7 DAY
        WHERE review_no = #{reviewNo}
    </update>
    <!-- Delete Review -->

    <!-- Recover Review -->
    <update id="recoverReview">
        UPDATE review
        SET is_review_deleted = false,
            review_del_date = null
        WHERE review_no = #{reviewNo}
          AND is_review_deleted = true
          AND review_del_date > CURRENT_TIMESTAMP
    </update>
    <!-- Recover Review -->


    <!---Review Count-->
    <select id="reviewCount" resultType="int">
        select count(review_no) from review;
    </select>
    <!---Review Count-->
    <!--조건으로 찾은 후기 갯수 -->
    <select id="selectReviewTotalCount" parameterType="com.bit.motrip.common.Search"	resultType="int">
        SELECT COUNT(*)
        FROM(
        SELECT *
        FROM review
        WHERE 1=1 AND is_review_public = TRUE AND is_review_deleted = FALSE
        <!--        <choose>-->
        <!--            <when test="planCondition == 'likes' and searchKeyword != null">-->
        <!--                AND trip_plan_likes = #{searchKeyword}-->
        <!--            </when>-->
        <!--            <when test="planCondition == 'views' and searchKeyword != null">-->
        <!--                AND trip_plan_views = #{searchKeyword}-->
        <!--            </when>-->
        <!--            <when test="planCondition == 'newDate' and searchKeyword != null">-->
        <!--                AND trip_plan_reg_date = #{searchKeyword}-->
        <!--            </when>-->
        <!--        </choose>-->
        ) countTable
    </select>


</mapper>
